<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M.J.Yangの博客</title>
  
  
  <link href="https://ymj0305.com/atom.xml" rel="self"/>
  
  <link href="https://ymj0305.com/"/>
  <updated>2023-10-23T03:55:22.175Z</updated>
  <id>https://ymj0305.com/</id>
  
  <author>
    <name>M.J.Yang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://ymj0305.com/2023/10/23/C%E8%AF%AD%E8%A8%80%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5%EF%BC%9A%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84%EF%BC%88%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84%EF%BC%89/"/>
    <id>https://ymj0305.com/2023/10/23/C%E8%AF%AD%E8%A8%80%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5%EF%BC%9A%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84%EF%BC%88%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84%EF%BC%89/</id>
    <published>2023-10-23T03:55:22.174Z</published>
    <updated>2023-10-23T03:55:22.175Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="title-C语言控制语句：选择结构（分支结构）"><a href="#title-C语言控制语句：选择结构（分支结构）" class="headerlink" title="title:C语言控制语句：选择结构（分支结构）"></a>title:C语言控制语句：选择结构（分支结构）</h2><blockquote><p>本篇文章重点介绍C语言中选择（分支）结构的用法简介以及相关实例。 </p></blockquote><h1 id="1-if-语句"><a href="#1-if-语句" class="headerlink" title="1.if 语句"></a>1.if 语句</h1><p>if 是最基础的分支语句(branching statement)，或选择语句(selection statement),可以简单的将if语句理解为一个交叉点，程序在两条分支中选择一条执行。</p><blockquote><p>语法<br><figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span>( expression )<br>   statement<br></code></pre></td></tr></table></figure><br>如果表达式(expression)为真（非0），那么程序将执行statement，否则跳过statement。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mermaid">flowchat<br>st=&gt;start: Start <br>e=&gt;end: End<br>op=&gt;operation: action<br>cond=&gt;condition: expression<br><br>st-&gt;cond<br>cond(no)-&gt;e<br>cond(yes)-&gt;op-&gt;e<br></code></pre></td></tr></table></figure><br>if中的statement 可以是一条简单语句也可以是由花括号括起来的复合语句。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span>(a&gt;b)<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,a);<span class="hljs-comment">//简单语句</span><br> <br><span class="hljs-keyword">if</span>(a&gt;b)<br>&#123;<span class="hljs-comment">//复合语句</span><br>b++;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,a,b);<br>&#125;<br></code></pre></td></tr></table></figure></p><h1 id="2-if-else-语句"><a href="#2-if-else-语句" class="headerlink" title="2.if else 语句"></a>2.if else 语句</h1><p>if 语句可以让程序选择一条语句执行或者跳过。此外C还提供了if else语句让程序在两条（段）语句之间进行选择（与双目运算符? : 类似）<br>语法<br><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span> (expression)     <br>program statement <span class="hljs-number">1</span> <span class="hljs-comment">// expression 为真则执行此条语句</span><br><span class="hljs-keyword">else</span><br>program statement <span class="hljs-number">2</span> <span class="hljs-comment">//expression 为假则执行此条语句</span><br><br><span class="hljs-comment">//与之类似的双目运算符</span><br>condition ? expression1 : expression2 <span class="hljs-comment">//condition 为真返回expression 1，为假返回expression 2</span><br></code></pre></td></tr></table></figure><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mermaid">flowchat<br>st=&gt;start: Start<br>e=&gt;end: End<br>op1=&gt;operation: action1<br>op2=&gt;operation: action2<br>cond=&gt;condition: expression<br>st-&gt;cond<br>cond(yes)-&gt;op1-&gt;e<br>cond(no)-&gt;op2-&gt;e<br></code></pre></td></tr></table></figure></p><h3 id="if-else-嵌套（Nested）"><a href="#if-else-嵌套（Nested）" class="headerlink" title="if else 嵌套（Nested）"></a>if else 嵌套（Nested）</h3><p>程序可以按照顺序从上到下对嵌套的的if else 语句依次进行判断，如果没有花括号，那么每一个else对应着它上方离它最近的if。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span> (expression <span class="hljs-number">1</span>)<br>program statement <span class="hljs-number">1</span><br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">if</span> (expression <span class="hljs-number">2</span>)<br>program statement <span class="hljs-number">2</span><br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">if</span> (expression <span class="hljs-number">3</span>)<br>program statement <span class="hljs-number">3</span><br><span class="hljs-keyword">else</span><br>program statement <span class="hljs-number">4</span><br><br></code></pre></td></tr></table></figure></p></blockquote><hr><h1 id="3-双目运算符（条件运算符-conditional-expression）"><a href="#3-双目运算符（条件运算符-conditional-expression）" class="headerlink" title="3.双目运算符（条件运算符:conditional expression）"></a>3.双目运算符（条件运算符:conditional expression）</h1><p>双目运算符可以看做 if else 语句的一种便捷的表达方式，其形式如下<br><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp">condition ? expression1 : expression2<br></code></pre></td></tr></table></figure><br>如果condition为真，则该表达式的值与expression1的相同，反之则与expression2的相同。</p><blockquote><p>Example<br>(5 &gt; 3) ? 1 : 2 值为1<br>(5 &lt; 3) ? 1 : 2 值为2</p></blockquote><h1 id="4-Switch"><a href="#4-Switch" class="headerlink" title="4.Switch"></a>4.Switch</h1><h2 id="4-1-switch介绍及语法"><a href="#4-1-switch介绍及语法" class="headerlink" title="4.1 switch介绍及语法"></a>4.1 switch介绍及语法</h2><p>使用双目运算符和if语句可以很容易实现二选一程序的编写，但是如果我们需要进行多选一的话，if等语句明显略显吃力，此时我们引入Switch语句来方便我们编写代码。<br>switch 在圆括号中的表达式的值是一个整数值（包括char类型），case的标签也必须是整数类型（同样包括char）的常量或者常量表达式。<br>switch结构如下(其中break可以跳出switch,如果没有break语句，那么程序就会从匹配的case执行到switch的末尾)：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">switch</span> (expression)<br>&#123;<br><span class="hljs-keyword">case</span> value1:<br>program statement<br><span class="hljs-keyword">break</span>;<br><br><span class="hljs-keyword">case</span> value2:<br>program statement<br><span class="hljs-keyword">break</span>;<br><br><span class="hljs-keyword">case</span> valueN:<br>program statement<br><span class="hljs-keyword">break</span>;<br><br><span class="hljs-keyword">default</span>:<br>program statement<br><span class="hljs-keyword">break</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="4-2-switch多重标签-case"><a href="#4-2-switch多重标签-case" class="headerlink" title="4.2 switch多重标签(case)"></a>4.2 switch多重标签(case)</h2><p>例如在统计单词中元音字母个数时，我们可以使用如下多重标签。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">switch</span> (ch)<br>        &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;a&#x27;</span> :<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;A&#x27;</span> :  a_ct++;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;e&#x27;</span> :<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;E&#x27;</span> :  e_ct++;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;i&#x27;</span> :<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;I&#x27;</span> :  i_ct++;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;o&#x27;</span> :<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;O&#x27;</span> :  o_ct++;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;u&#x27;</span> :<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;U&#x27;</span> :  u_ct++;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span> :   <span class="hljs-keyword">break</span>;<br>        &#125;                    <span class="hljs-comment">// end of switch</span><br></code></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;title-C语言控制语句：选择结构（分支结构）&quot;&gt;&lt;a href=&quot;#title-C语言控制语句：选择结构（分支结构）&quot; class=&quot;headerlink&quot; title=&quot;title:C语言控制语句：选择结构（分支结构）&quot;&gt;&lt;/a&gt;title:C语言</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://ymj0305.com/2023/10/23/hello-world/"/>
    <id>https://ymj0305.com/2023/10/23/hello-world/</id>
    <published>2023-10-22T16:25:30.681Z</published>
    <updated>2023-10-22T16:25:30.681Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
